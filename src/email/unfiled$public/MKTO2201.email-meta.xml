<?xml version="1.0" encoding="UTF-8"?>
<EmailTemplate xmlns="http://soap.sforce.com/2006/04/metadata">
    <available>true</available>
    <encodingKey>UTF-8</encodingKey>
    <name>OSS_Webinar_ Spring_Webinar Monthly Program.April 2015 Webinar Email</name>
    <style>none</style>
    <subject>Spring Webinars: Smarter Service-to-Service Invocations w/Spring Cloud &amp; Reactive data-pipelines with Spring XD and Kafka</subject>
    <textOnly>Smarter Service-to-Service Invocations with Spring Cloud
Speaker: Josh Long 

Spring Cloud 1.0 is here! It offers a powerful way to create and consume microservices. As you introduce new services, you introduce integration problems: services can be shaky, they can disappear and - as they&apos;re often exposed over HTTP - they require a bit more footwork than in-process method invocations.

In this webinar, we&apos;ll focus specifically on how Spring Cloud integrates service registration (e.g.: Eureka, Consul, or Zookeeper), declarative REST clients (with Netflix&apos;s Feign), reactive programming and the circuit breaker pattern with Hystrix to support easy, robust service-to-service invocations.

This is a deep dive on how to make connect and consume microservices, and is a natural next step after my introduction to building microservices with Spring Cloud.
Europe
Tuesday, April 21, 2015
 2:00PM GMT Time
 (London, GMT)
Register &lt;http://connect.pivotal.io/OSS_Webinar_7AMSmarterService-to-ServiceInvocationswithSpringCloud_Register.html&gt;
North America
Tuesday, April 21, 2015
 10:00AM PDT
 (San Francisco, GMT-07:00)
Register &lt;http://connect.pivotal.io/OSS_Webinar_10AMSmarterService-to-ServiceInvocationswithSpringCloud_Register.html&gt;
Reactive data-pipelines with Spring XD and Kafka
Speakers: Marius Bogoevici &amp; Mark Pollack

In the recent years, drastic increases in data volume as well as a greater demand for low latency and high responsiveness has led to a radical shift in business requirements and application development methods. These needs have been addresses, by concepts such as reactive programming and reactive streams that ensure a high responsiveness even under increased data throughput.

Spring XD natively supports asynchronous event-driven programming with observable streams through its integrations with RxJava and Project Reactor. With its own integration built on Kafka&apos;s Simple Consumer API, Spring XD emphasizes the strengths and specifics of Kafka as a transport based on the model of a high-throughput distributed log, while providing the flexibility to support partitioning, offset management and replayability, and generally preserving and emphasizing.

Joining the power of observable streams and Kafka, in this webinar, we will demonstrate how to build data-centric reactive pipelines at enterprise scale.
Europe
Tuesday, April 28, 2015
 2:00PM GMT Time
 (London, GMT)
Register &lt;http://connect.pivotal.io/OSS_Webinar_7AMReactivedata-pipelineswithSpringXDandKafka_Register.html&gt;
North America
Tuesday, April 28, 2015
 10:00AM PDT
 (San Francisco, GMT-07:00)
Register &lt;http://connect.pivotal.io/OSS_Webinar_10AMReactivedata-pipelineswithSpringXDandKafka_Register.html&gt;</textOnly>
    <type>custom</type>
    <uiType>Aloha</uiType>
</EmailTemplate>
