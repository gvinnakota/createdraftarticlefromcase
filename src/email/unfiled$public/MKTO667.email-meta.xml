<?xml version="1.0" encoding="UTF-8"?>
<EmailTemplate xmlns="http://soap.sforce.com/2006/04/metadata">
    <available>true</available>
    <encodingKey>UTF-8</encodingKey>
    <name>OSS_Webinar_ Spring_Webinar Monthly Program.May 2014 (second May send)</name>
    <style>none</style>
    <subject>Spring Webinars: Abstracting PaaS services with Spring Cloud, Spring Batch 3.0.0 and Spring Integration</subject>
    <textOnly>Abstracting PaaS services to be portable with Spring Cloud
Speaker: Ramnivas Laddad

Developing an application to a cloud platform involves working with a deployed application&apos;s environment and connecting to services. Spring Cloud, a new project, simplifies these tasks in a variety of cloud platforms including Cloud Foundry and Heroku. Spring Cloud makes it possible to deploy the same artifact (a war or a jar) to multiple cloud environments. It supports multiple clouds through the concept of Cloud Connector and provides out of the box implementation for Cloud Foundry and Heroku, and extension points for other cloud platforms.

In this talk, we will introduce the Spring Cloud project, show how you can simplify configuring applications for cloud deployment, discuss its extensibility mechanism, and put it to good use by showing practical examples from the field.
Europe
Tuesday, June 3, 2014
3:00pm BST Time
(London, UTC+01:00)
Register &lt;http://play.gopivotal.com/OSS_Webinar_AbstractingPaaSServicesPortablewSpringCloud7AM_Register.html&gt;
North America
Tuesday, June 3, 2014
10:00am PDT
(San Francisco, UTC-07:00)
Register &lt;http://play.gopivotal.com/OSS_Webinar_AbstractingPaaSServicesPortablewSpringCloud10AM_Register.html&gt;
Spring Batch 3.0.0
Speaker: Michael Minella

The Spring team is gearing up for a major rev of Spring Batch - Spring Batch 3.0.0 RC1 which introduces JSR-352 support, among other features. Adopting a Java EE standard that was directly based on Spring Batch to begin with is fortunately, fairly straightforward for us. JavaEE7 compliance updates and expands the scope of Spring Batch 3.0.0 to combine JavaEE7/352 compliance with years of Batch&apos;s battle-tested, proven-in-production codebase. Of course, there is a wealth of capability and features that go far beyond the specification into distributed processing and beyond.

In this webinar, project lead Michael Minella will cover Spring Batch&apos;s implementation of JSR-352 as well as some of the new features in the 3.0 release.
Europe
Tuesday, June 10, 2014
3:00pm BST Time
(London, UTC+01:00)
Register &lt;http://play.gopivotal.com/OSS_Webinar_SpringBatch3.0.07AM_Register.html&gt;
North America
Tuesday, June 10, 2014
10:00am PDT
(San Francisco, UTC-07:00)
Register &lt;http://play.gopivotal.com/OSS_Webinar_SpringBatch3.0.010AM_Register.html&gt;
Spring Integration Done Boot-ifully
Speaker: Glenn Renfro

With the increase in the number of devices that emit information it has become ever more important to be able to retrieve this data and process accordingly. In response to this need, MQTT has become the defacto lightweight transport for connecting an &quot;Internet of things&quot;. With that being said, how do your applications support for eventing, messaging, and scheduling? Utilizing Spring Boot and Spring Integration you will see how to create an application with a scheduler that will retrieve data from a web service, cleanse and emit the data via MQTT.

Then you&apos;ll see how to create an application, also written using Spring Boot and Spring Integration, that will capture the MQTT events and record the results. From this discussion you can see how to use these tools and take advantage of them for your own big data projects as soon as you return to the office.
Europe
Tuesday, June 17, 2014
3:00pm BST Time
(London, UTC+01:00)
Register &lt;http://play.gopivotal.com/OSS_Webinar_SpringIntegrationDoneBoot-ifully7AM_Register.html&gt;
North America
Tuesday, June 17, 2014
10:00am PDT
(San Francisco, UTC-07:00)
Register &lt;http://play.gopivotal.com/OSS_Webinar_SpringIntegrationDoneBoot-ifully10AM_Register.html&gt;</textOnly>
    <type>custom</type>
    <uiType>Aloha</uiType>
</EmailTemplate>
