<?xml version="1.0" encoding="UTF-8"?>
<EmailTemplate xmlns="http://soap.sforce.com/2006/04/metadata">
    <available>true</available>
    <description>2nd Feb Nwslttr</description>
    <encodingKey>UTF-8</encodingKey>
    <name>Corp Comm.02-27-17 V5N3</name>
    <style>none</style>
    <subject>Inside Pivotal Newsletter, 28 Feb</subject>
    <textOnly>February 28, 2017
Vol 5, No 3
Letter from the Editor &lt;[[#letter-from-the-editor]]&gt; – XX XX
All Things Product &lt;[[#product-update]]&gt; – Build Apps, Not Platforms!
Interestings &lt;[[#seen-update]]&gt; – Noteworthy Odds &amp; Ends
Labs + Culture &lt;[[#culture-update]]&gt; – A More Culturally Conscious Product Approach
My Name Is &lt;[[#my-name-is]]&gt; – Heather Mussman
no party of one




Steve Casale &lt;[[#author-socialcast-profile]]&gt;, Pivotal Communications
Good as it can be, innovation isn’t a party of one. Many of us are captivated by technical breakthroughs, but process helps build technology that works at scale. And then there is bringing your innovation to organizations, where many a bright hope has floundered on the ramparts of self-protection and tactical missteps of the innovator.
 
The truth is, their are many dimensions to applying a technology vision. Engineers take ideas through the acid bath of testing. Evangelist and brand teams pull together a narrative, and the field uses that to get everyone’s foot in the door—without which your great “value prop” won’t get very far.
 
Our contributors this issue touch on that &quot;it takes a village&quot; theme. Jared Ruckle returns to summarize key takeaways in his new white paper on the hazards of the DIY platform. Its messages on helping customers avoid dangerous assumptions and practices as they reframe their organizations from monolith to cloud-native thinking should be useful for any customer-facing Pivot.
 
West coast colleague Karina Villanueva makes her debut with a tidy hypothesis on rethinking process: or how we might fortify Lean to encompass deeper, more complex cultural factors when 
determining user needs and requirements. (Note: she&apos;s open to fellow travelers helping find ways to test this.)
 
For hypotheses wielders and budding scribes, Pivotal has a new style guide &lt;[[https://docs.google.com/document/d/1IPF4KS3M-6PcWFagXkAj8544G7yf8lpHXNz7KKrP2wY/edit]]&gt; to help you write well on behalf of Pivotal. And the Pivotal Town Hall is next Tuesday, 7 March (invitation in your inbox), feel free to submit a question &lt;[[https://docs.google.com/a/pivotal.io/forms/d/e/1FAIpQLSfSWaCJHD-ctoxqfY-7eVYQJhyBCh8UqLTmqr0G0dFiixtd2g/viewform]]&gt; in advance.
 
Enjoy.
build apps, not platforms!




Jared Ruckle &lt;[[#author-socialcast-profile]]&gt;, Principal Product Marketing Mgr, Cloud Foundry
One of our priorities for 2017 is to enable our customers, or help an organization re-imagine their business around better software delivery. There&apos;s a less romantic, but vital dimension to this goal: convincing the customer that they *shouldn&apos;t* build everything themselves.
 
Developers are builders after all, right? There’s an urge to wire up dozens of open-source components into a homebrew platform. How, then, do we channel the drive to &quot;build&quot; into something more valuable? How can we get them to build above the famous Value Line &lt;[[https://docs.google.com/file/d/0B2Tbe2wqy2j9azJSR3djZFJPMjg/view]]&gt;?
 
A new whitepaper aims to answer this question: The Upside-Down Economics of Building Your Own Platform (gated link &lt;[[https://content.pivotal.io/white-papers/the-upside-down-economics-of-building-your-own-platform]]&gt;). For Pivots, the “no registration required” version is here &lt;[[https://drive.google.com/file/d/0B_GV0pZYRifiRkhFR3ZXUjBFX00/view]]&gt;.
 
Building a platform is hard—ask any engineer who&apos;s worked on Cloud Foundry! It&apos;s a near certainty that a given enterprise can’t build, run, and manage a custom platform.
 
We&apos;ve persuaded scores of enterprises to choose a commercial platform instead. The paper captures many of our best practices in this nuance of the sales play. It flags specific difficulties platform builders are likely to encounter. (Perhaps they have even felt some of this pain already.) 
 
The top pitfalls, as detailed in the paper:


 - Oversimplification. Spinning up a container orchestrator, or running automation scripts isn&apos;t the hard part.
 - Underestimating Ongoing Investment. One retailer invested more than $14M, and over 50 engineers and 2 years to get a functional platform to market. What a terrible waste!
 - Thinking the Platform is Done. You can&apos;t just throw a platform over the wall to a support group to manage. It takes developers and operators to run it and improve it. Otherwise, your talented staff focuses on &quot;keeping the lights on&quot; instead of custom software.
 - The Lock-In Boogeyman. Homegrown platforms themselves become their own form of lock-in. Only a handful of engineers understand how it works. What happens when they leave the company? This is a risky place for an enterprise.


Of course, the larger point is that the customer shouldn&apos;t be building a platform in the first place. It&apos;s the custom code that matters. This paper should help you elevate the conversation. Business leaders are less enthused with plumbing, and more excited about differentiated services in market. Build great apps, and leave the rest to us.
Interestings









 - Tell prospects about the new Pivotal Advocates &lt;[[https://pivotal.io/advocates]]&gt; page—and head here &lt;[[https://docs.google.com/a/pivotal.io/forms/d/e/1FAIpQLSdZb_beleuIu96NlYeJSxwBYltpU78DvSzhE6k1Qv7nVonaIA/viewform?c=0&amp;w=1]]&gt; if you speak or want to speak for Pivotal.
 - New to GemFire and want the not-too-technical story on its data powers? Head Pivotal Academ &lt;[[https://pivotal.litmos.com/?C=490674]]&gt;y to train up.
 - Pivotal&apos;s new partner acceleration lab (PAL) just had its first cohort, and it&apos;s going to be a big deal &lt;[[https://content.pivotal.io/blog/helping-partners-transform-the-pivotal-platform-acceleration-lab]]&gt;.
 - What is this balanced team? Pivots answer that and more on 6 March Tweetchat: #AskAPivot &lt;[[https://twitter.com/search?q=%23AskAPivot&amp;src=hash]]&gt; pic.twitter.com/FSyjlE1STx &lt;[[https://t.co/FSyjlE1STx]]&gt; (tell your customers and friends to join). 
 - Curious about impilict bias? Try on the widely used Harvard implicit training tests &lt;[[https://implicit.harvard.edu/implicit/]]&gt; as a start.
 - Cool tips to stay creative and fresh in the Guardian &lt;[[https://www.theguardian.com/careers/2017/feb/13/10-ways-to-enhance-creativity-at-work]]&gt;—Pivots&apos; views included!
A more culturally conscious product approach




Karina Villanueva &lt;[[#author-socialcast-profile]]&gt;, Senior Product Manager, Santa Monica
Technology appropriation happens when a party finds a technology suitable for a particular purpose that conforms to or accelerates 
existing social conditions or preferences (cultural, economic, and environmental). There are great examples of technology appropriation where the existing culture uses it to elevate their status. For example, Lowriders &lt;[[https://www.amazon.com/Lowrider-Space-Aesthetics-Politics-American/dp/0292754248]]&gt; modify their cars by appropriating hydraulics to lower and raise their cars. These cars are seen as form of pride and identity by Chicanos &lt;[[https://en.wikipedia.org/wiki/Chicano]]&gt;.
 

 
However, technology appropriation can be unpredictable and dangerous.  Between 2006–2009, drug cartels in Mexico relied heavily on video streaming websites to intimidate enemies and snitches, and to recruit new members by recording torture and streaming them on these platforms. That seems a grisly new use of a technology, and while it is impossible to predict all the ways in which a technology will be used, it is within our reach (and I&apos;d argue scope) to ask what deeper questions about the cultural context in which tools will coexist.
 
With Lean and Agile practices, we take a user-centric approach. We make small iterations, and try and our best to do the leanest thing we can that delivers the largest amount of value. We make sure to list our assumptions and create lean scientific tests that will help us de-risk these assumptions. We learn; we build; we measure.
 
But, when it comes to deeply engraved culture, those characteristic that are so hidden that have us on autopilot, does a Lean and Agile 
approach surface enough information? While we share with ethnography a focus on the subject (or user, in our case), ethnography moves slow, while Lean moves fast—and I&apos;d argue that information on the cultural, environmental, and economic phenomena can be missed when we move fast. Why not leverage our tools and practices to ask deeper cultural questions that will help us understand more about otherwise hidden contexts (cultural, economic, and environmental).
 
Food for thought: What if we consider generating &quot;Appropriation Experiments?&quot; In these experiments we can combine social science approaches with the speed of agile. We take our tools and introduce them to unintended audiences. Just like ethnography, we focus on exploring the social phenomena rather than testing specific hypothesis; and just like contextual inquiry, we are inductive. We collect data in a way that accumulates descriptive detail and then let the data speak from the ground up.
 
We would need to afford more flexibility as to what and how data is collected. We would need to be creative about how we collect data (e.g. journals, videos, audios recordings). It might even challenge us to get better at leveraging other tools like NLP. The type of artifacts we analyze will be more challenging, but holistic. The results of our tests may or may not change what feature we build next, nor can they predict every possible way our tools will be appropriated. But they might help understand challenges our products will face.
 
My ideas are untested, but as technologist, we have the moral responsibility to make an effort to broaden our understanding of the unexpected ways in which we might be disturbing the waters of a culture, 
and unexpected behaviors we might be enabling. Again, not because we can predict all unintended use and nor because all technology appropriation is bad. But because we are lucky enough to catch one negative use of our technology, it might change how we approach our products. Let me know if you&apos;re interested in this too, and in how we might apply and test this.
heather musman




Data Strategist and Supreme Analytics Ruler (my business card says Data Specialist)
At Pivotal I...
Work in our Data Specialists organization helping enterprise companies create a flexible and modern platform to support data services for innovation and business outcomes. We deliver on the dream that data is a company’s most valuable asset.
You can find me...
In the US midwest—In Minnesota (which is home), while I travel frequently to Omaha, Nebraska. I can also be found on LinkedIn &lt;[[https://www.linkedin.com/in/musman]]&gt; and Twitter &lt;[[https://twitter.com/kitzi21?lang=en]]&gt;.
Currently, I am working on…
Helping several enterprise prospects who are struggling with monolithic, disparate data architectures that need to support a new strategic mandate around nimble innovation. Additionally, there is widespread pressure for companies to “find value” in their data, so I’m introducing our Data Science team and their unique ability to find the golden nuggets buried in peta-volumes.
In my spare time…
I&apos;m a professional chauffeur to active 13- and 15-year olds. I drink quantities of strong coffee and good wine, play four sports, host theme parties, and read about two books a week—many of which have absolutely no literary merit at all.
Something you probably don’t know about me…
I speak German, play ice hockey, and am writing a novel.
Top-to-bottom: Hiking with daughter; Winter golf is just a different thing; on the pitch with one of Heather&apos;s teams.
To me Pivotal…
The workplace culture I’ve been searching for since I started my career 20 years ago.</textOnly>
    <type>custom</type>
    <uiType>Aloha</uiType>
</EmailTemplate>
